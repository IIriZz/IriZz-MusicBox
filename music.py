# -*- coding: utf-8 -*-
# music.py

from random import choice

import discord
import youtube_dl
from discord.ext import commands


def generate_name():
    with open('WORDS.txt', 'r', encoding='UTF-8') as file:
        return file.read().split('\n')


def generate_names():
    with open('WORDS2.txt', 'r', encoding='UTF-8') as file:
        return file.read().split('\n')


class Music(commands.Cog):
    def __init__(self, client):
        self.client = client

    @commands.command()
    async def join(self, ctx):
        await ctx.send(f'–í—ã –≤—Å–µ {choice(generate_names())}!')
        if ctx.author.voice is None:
            await ctx.send('–ü—É—Å—Ç—å –º–µ–Ω—è —Ö–æ—Ç—å –∫—Ç–æ-–Ω–∏–±—É–¥—å –ø–æ—Å–ª—É—à–∞–µ—Ç üëÇ')
        voice_channel = ctx.author.voice.channel
        if ctx.voice_client is None:
            await voice_channel.connect()
        else:
            await ctx.voice_client.move_to(voice_channel)

    @commands.command()
    async def disconnect(self, ctx):
        await ctx.send('‚ö° **–ê–∫—Ç–∏–≤–Ω–æ —Å—ä—ë–±—ã–≤–∞—é** ‚ö°')
        await ctx.voice_client.disconnect()

    @commands.command()
    async def pause(self, ctx):
        if ctx.voice_client.is_playing():
            await ctx.send(f'**{ctx.message.author}** –ø–æ—Å—Ç–∞–≤–∏–ª –Ω–∞ –ø–∞—É–∑—É ‚è∏')
            await ctx.voice_client.pause()
        else:
            await ctx.send(f'**{ctx.message.author}**, —Ç—ã —É—à–∏ –ø–æ —É—Ç—Ä–∞–º –º–æ–µ—à—å? –ú—É–∑—ã–∫–∞ –Ω–µ –∏–≥—Ä–∞–µ—Ç –≤–æ–æ–±—â–µ-—Ç–æ ‚è∏')

    @commands.command()
    async def resume(self, ctx):
        if ctx.voice_client.is_paused():
            await ctx.send(f'**{ctx.message.author}** –ø—Ä–æ–¥–æ–ª–∂–∏–ª –º—É–∑—ã–∫—É ‚ñ∂')
            await ctx.voice_client.resume()
        else:
            await ctx.send(f'**{ctx.message.author}**, —Ç—ã —Å–æ–≤—Å–µ–º –≥–ª—É—Ö–æ–π? –ú—É–∑—ã–∫–∞ —Ç—É—Ç –¥–∞–≤–Ω–æ –µ–±–∞—à–∏—Ç üé∂')

    @commands.command()
    async def play(self, ctx, url):
        ctx.voice_client.stop()
        print(ctx.message.author)
        if ctx.message.author == 'IriZz#7910':
            await ctx.send(f'–ú–æ–≥—É—á–∏–π\n–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π\n–£–∂–∞—Å–∞—é—â–∏–π\n–°—Ç—Ä–∞—Å—Ç–Ω—ã–π\n–ò–∑—É–º–∏—Ç–µ–ª—å–Ω—ã–π\n–í—Å–µ–ø–æ–±–µ–∂–¥–∞—é—â–∏–π\n–ù–µ—É—Å—Ç–∞–Ω–Ω—ã–π\n'
                           f'–†–µ—à–∏—Ç–µ–ª—å–Ω—ã–π\n–ß–∞—Ä—É—é—â–∏–π\n–¢–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π\n–ß—É–≤—Å—Ç–≤–µ–Ω–Ω—ã–π\n–ë–µ—Å—Å—Ç—Ä–∞—à–Ω—ã–π\n–ù–µ–ø–æ–±–µ–¥–∏–º—ã–π\n'
                           f'**{ctx.message.author}** —Ä–µ—à–∏–ª –≤–∫–ª—é—á–∏—Ç—å –ø—Ä–µ–∫—Ä–∞—Å–Ω—É—é –º—É–∑—ã–∫—É')
        else:
            await ctx.send(f'–ö–∞–∫–æ–π-—Ç–æ {choice(generate_name())} –ø–æ –∏–º–µ–Ω–∏ **{ctx.message.author}** –∑–∞–ø—É—Å—Ç–∏–ª —ç—Ç–æ')

        FFMPEG_OPTIONS = {
            'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5',
            'options': '-vn'
        }

        YDL_OPTIONS = {
            'format': 'bestaudio/best'
        }

        vc = ctx.voice_client


        with youtube_dl.YoutubeDL(YDL_OPTIONS) as ydl:
            info = ydl.extract_info(url, download=False)
            url2 = info['formats'][0]['url']
            source = await discord.FFmpegOpusAudio.from_probe(url2, **FFMPEG_OPTIONS)
            vc.play(source)


    @commands.command(pass_context=True)
    @commands.has_permissions(administrator=True)
    async def help(self, ctx):
        emb = discord.Embed(
            title='**–ü–æ–º–æ—â—å –¥–ª—è –Ω–∏–∑—à–∏—Ö —Ñ–æ—Ä–º –∂–∏–∑–Ω–∏**',
            colour=discord.Colour.purple()
        )

        emb.add_field(name='**$join**', value='–í—Å—Ç—É–ø–∏—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π —á–∞—Ç üé§', inline=False)
        emb.add_field(name='**$play {url}**', value='–°—ã–≥—Ä–∞—Ç—å –º—É–∑—ã–∫—É {—Å—Å—ã–ª–∫–∞ –Ω–∞ –º—É–∑—ã–∫—É} üé∂', inline=False)
        emb.add_field(name='**$pause**', value='–ü–æ—Å—Ç–∞–≤–∏—Ç—å –º—É–∑—ã–∫—É –Ω–∞ –ø–∞—É–∑—É ‚è∏', inline=False)
        emb.add_field(name='**$resume**', value='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä–∞—Ç—å –º—É–∑—ã–∫—É ‚ñ∂', inline=False)
        emb.add_field(name='**$disconnect**', value='–í—ã–π—Ç–∏ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —á–∞—Ç–∞ ‚ö°', inline=False)

        await ctx.send(embed=emb)


def setup(client):
    client.add_cog(Music(client))
